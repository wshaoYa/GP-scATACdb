{"version":3,"file":"js/446.bbe906c5.js","mappings":"+FAIC,EAAEA,EAAMC,KAEHC,EAAOC,QAAUF,GAItB,EANA,CAME,GAAe,KAChB,aAEA,MAAMG,EAA2B,kBAAXC,OAAsBA,OAASC,KAChDF,EAAOG,aAAaC,QAAQC,KAAK,uDAEtC,IAAIC,EAAkB,KAClBC,GAAuB,EAC3B,MAAMC,EAAOC,IAAQ,IAAMA,GAAK,CAAE,MAAOC,GAAI,GACvCC,EAAWX,EAAOY,oBAAsB,CAAC,EACzCC,EAAkBb,EAAOa,gBAE/B,IAAIC,EAAkB,eAAeN,KAAKR,EAAOG,gBAAkBH,EAAOe,UAAYf,EAAOgB,YAC7F,MAAMC,EAAmBJ,GAAmB,kBAAmBK,SAASC,gBAAgBC,MACpF,SACA,WAEEC,EAAc,CAClBC,oBACAC,eAAgBvB,EAAOuB,gBAAkBZ,EAASY,eAClDC,WAAW,EACXC,QAAS,CAAEC,KAAM,QAASC,MAAO,EAAGC,MAAO,EAAGC,IAAK,GACnDC,KAAM,yEASR,SAASC,EAAYC,GACnB,IAAKA,EAAK,MAAM,IAAIC,MAAM,OAC1B,MAAMC,EAAShB,SAASiB,cAAc,UAWtC,OAVAD,EAAOE,QAAS,EAChBF,EAAOF,IAAMA,EACbE,EAAOG,QAAS,EAChBH,EAAOtC,KAAO,SACdsC,EAAOI,UAAW,EAClBJ,EAAOK,YAAc,IAAIC,IAASN,EAAOO,cAAcF,eAAeC,GACtEN,EAAOQ,iBAAiB,QAAQ,KAC9BR,EAAOG,QAAS,IACf,CAAEM,MAAM,IACXzB,SAAS0B,KAAKC,YAAYX,GACnBA,CACT,CASA,SAASY,EAAWd,GAClB,MAAMe,EAAU,uBACVC,EAAW9B,SAAS+B,yBACpBC,EAAQ,CACZC,MAAOnD,EAAOoD,KAAKpB,EAAK,QAASe,GACjCV,QAAQ,EACRC,UAAU,EACVe,SAAS,EACTC,SAAYJ,EAAMC,MAAMI,OAAQ,EAChCb,oBAAqBF,GAAQQ,EAASN,oBAAoBF,EAAM,EAChEgB,iBAAkBhB,GAAQQ,EAASQ,iBAAiBhB,EAAM,EAC1DiB,uBAAwBjB,GAAQQ,EAASS,uBAAuBjB,EAAM,EACtED,eAAgBC,GAAQU,EAAMC,MAAMZ,eAAeC,EAAM,GAGrDkB,EAAUC,IACVA,EAAIC,SAAWV,EAAMC,QACvBD,EAAMb,QAAS,EACfrC,EAAOyD,oBAAoB,UAAWC,GACtCR,EAAMM,cAAc,IAAIK,MAAM,SAChC,EAKF,OAFA7D,EAAO0C,iBAAiB,UAAWgB,GAE5BR,CACT,CAEA,IAEE,IAAIY,SAAS,IAAIC,gBACblD,KAAqB,kBAAmBmD,aAC1ClD,GAAkB,EAEtB,CAAE,MAAOmD,GACPnD,GAAkB,CACpB,CAkBA,SAASoD,IACF5D,IACHA,EAAkBO,EACdkB,EAAWV,EAAYS,MACvBgB,EAAUzB,EAAYS,MAE9B,CAQA,SAASR,EAAmB6C,EAAUpB,EAASqB,GAC7C,IAAIC,EAAO,CACTD,KAAM,KACNE,SAAU,KACVC,sBAAkBC,EAClBC,sBAAkBD,GAGhBE,EAAe,EACfC,EAAc,KACdC,EAAU,KACVC,EAAK,KAeT,GAZIC,OAAOC,SAAShC,KAChBqB,EAAMrB,GAAY,CAAEA,EAASqB,GAC/BhE,QAAQC,KAAK,wFACbgE,EAAKD,KAAOA,EACZC,EAAKE,iBAAmBxB,GACfA,GAAWA,EAAQiC,eAC5B5E,QAAQC,KAAK,wFACbgE,EAAKD,KAAOA,EACZC,EAAKE,iBAAmBxB,GAExBsB,EAAOtB,GAAW,CAAC,GAEhBjC,EAAiB,CACpBoD,IAEAU,EAAU,IAAIK,eAGdd,EAAWe,mBAAmBf,EAASgB,QAAQ,MAAO,MACnDA,QAAQ,SAAUC,QAClBD,QAAQ,MAAO,OAElB,MAAME,EAAW,CACfC,qBAAsB/E,EACtB+D,SAAUD,EAAKC,UAAYiB,KAAKC,SAASC,WAAWC,OAAO,GAAK,IAAMvB,EACtEwB,QAAS,CACP,eAAgB,0CAChB,sBAAuB,gCAAkCxB,IAIzDE,EAAKD,OACPiB,EAASM,QAAQ,kBAAoBtB,EAAKD,MAG5C,MAAM5B,EAAO,CAAE6C,EAAU,IAAK,CAAET,EAAQgB,QAExC,GAAIrF,EAAsB,CACxB,MAAMsF,EAAmC,WAArB5E,OAAgCuD,EAAY,CAE9DsB,UAAWC,EAAOC,GAChB,KAAMD,aAAiBE,YACrB,MAAM,IAAIC,UAAU,8BAEtBxB,GAAgBqB,EAAMI,OACtBH,EAAWI,QAAQL,GAEfpB,IACF0B,SAASC,KAAO3B,EAChBA,EAAc,KAElB,EACA4B,QACM5B,IACF0B,SAASC,KAAO3B,EAEpB,GAEFE,EAAK,IAAIxD,EAAYmF,gBACnBX,EACAxB,EAAKE,iBACLF,EAAKI,kBAEP,MAAMgC,EAAiB5B,EAAG6B,SAE1B9B,EAAQ+B,MAAMpE,YAAY,CAAEkE,kBAAkB,CAAEA,GAClD,CAEA7B,EAAQ+B,MAAMC,UAAYjD,IAEpBA,EAAIkD,KAAKC,SAEc,aAArB7F,GACFX,EAAgBgD,SAChBhD,EAAkB,KACdoE,EACF2B,SAASC,KAAO3C,EAAIkD,KAAKC,SAEzBnC,EAAchB,EAAIkD,KAAKC,WAGrBxG,EAAgB+C,UAClB/C,EAAgBgD,SAChBhD,EAAkB,KAEO,WAArBW,GACFc,EAAWV,EAAYS,OAK3BC,EAAW4B,EAAIkD,KAAKC,WAEbnD,EAAIkD,KAAKE,QAClBC,EAAS,GACTpC,EAAQ+B,MAAMpE,YAAY,SAC1BqC,EAAQ+B,MAAMC,UAAY,KAC1BhC,EAAQ+B,MAAMpD,QACdqB,EAAQgB,MAAMrC,QACdqB,EAAU,KACZ,EAGEtE,EAAgB+B,OAClB/B,EAAgBiC,eAAeC,GAE/BlC,EAAgBoC,iBAAiB,QAAQ,KACvCpC,EAAgBiC,eAAeC,EAAI,GAClC,CAAEG,MAAM,GAEf,CAEA,IAAIqE,EAAS,GAEb,OAASlG,GAAmB+D,GAAMA,EAAGoC,UAAa,IAAI5F,EAAYE,eAAe,CAC/E2F,MAAOnB,GACL,KAAMA,aAAiBE,YACrB,MAAM,IAAIC,UAAU,8BAElBpF,EAMFkG,EAAOG,KAAKpB,IAcdnB,EAAQ+B,MAAMpE,YAAYwD,GAC1BrB,GAAgBqB,EAAMI,OAElBxB,IACF0B,SAASC,KAAO3B,EAChBA,EAAc,MAElB,EACApB,QACE,GAAIzC,EAAiB,CACnB,MAAMsG,EAAO,IAAIC,KAAKL,EAAQ,CAAEM,KAAM,4CAChCC,EAAOrG,SAASiB,cAAc,KACpCoF,EAAKjB,KAAOkB,IAAIC,gBAAgBL,GAChCG,EAAKT,SAAW3C,EAChBoD,EAAKG,OACP,MACE9C,EAAQ+B,MAAMpE,YAAY,MAE9B,EACAwE,QACEC,EAAS,GACTpC,EAAQ+B,MAAMpE,YAAY,SAC1BqC,EAAQ+B,MAAMC,UAAY,KAC1BhC,EAAQ+B,MAAMpD,QACdqB,EAAQgB,MAAMrC,QACdqB,EAAU,IACZ,GACCP,EAAKE,iBACV,CAEA,OArNA/D,GAAK,KAEH,MAAM,SAAEkG,GAAa,IAAIF,gBACnBmB,EAAK,IAAI1C,eACf0C,EAAGhB,MAAMpE,YAAYmE,EAAU,CAACA,IAChCiB,EAAGhB,MAAMpD,QACToE,EAAG/B,MAAMrC,QACThD,GAAuB,EAEvBqH,OAAOC,eAAexG,EAAa,kBAAmB,CACpDyG,cAAc,EACdb,UAAU,EACVc,MAAOvB,iBACR,IAwMInF,I,4JCvTAD,MAAA,kD,GAEI4G,MAAM,YAAY,0B,GAYFA,MAAM,Y,GAgBNA,MAAM,Y,GA2BNA,MAAM,Y,GAa1B5G,MAAA,kD,GAEI4G,MAAM,YAAY,0B,UAKPC,EAAAA,EAAAA,GAAyB,KAAtBD,MAAM,aAAW,W,UAAqCC,EAAAA,EAAAA,GAGJ,aAHSA,EAAAA,EAAAA,GAGf,QAHqB,YAAU,OACtE,cAAY,UAAU,iBAAe,QACrCC,MAAM,yD,EAAwDD,EAAAA,EAAAA,GAC9B,KADiCD,MAAM,cACnE5G,MAAA,0B,oDAoCX4G,MAAM,aAAa5G,MAAA,qB,UACpB6G,EAAAA,EAAAA,GAAW,sB,maArH/BA,EAAAA,EAAAA,GAoEM,MApENE,EAoEM,EAlEFF,EAAAA,EAAAA,GAiEM,MAjENG,EAiEM,EAhEFC,EAAAA,EAAAA,IA+DcC,EAAA,C,WA/DQC,EAAAC,Y,qCAAAD,EAAAC,YAAWC,I,mBAC7B,IA6DmB,EA7DnBJ,EAAAA,EAAAA,IA6DmBK,EAAA,CA7DD9I,KAAK,KAAG,CAEXsI,OAAKS,EAAAA,EAAAA,KACZ,IAEU,EAFVN,EAAAA,EAAAA,IAEUO,EAAA,M,kBADN,IAAU,EAAVP,EAAAA,EAAAA,IAAUQ,M,eACJ,gB,kBAId,IAkDU,EAlDVR,EAAAA,EAAAA,IAkDUS,EAAA,CAlDDC,IAAI,OAAQC,MAAOT,EAAAU,OAAQ,cAAY,S,mBAC5C,IAeM,EAfNhB,EAAAA,EAAAA,GAeM,MAfNiB,EAeM,EAbFb,EAAAA,EAAAA,IAGec,EAAA,CAHDC,MAAM,aAAW,C,kBAC3B,IACmC,EADnCf,EAAAA,EAAAA,IACmCgB,EAAA,C,WADhBd,EAAAU,OAAOK,Q,qCAAPf,EAAAU,OAAOK,QAAOb,GAAEc,YAAY,eAAeC,UAAA,GAC1DpI,MAAA,e,iCAERiH,EAAAA,EAAAA,IAGec,EAAA,CAHDC,MAAM,gBAAc,C,kBAC9B,IACmC,EADnCf,EAAAA,EAAAA,IACmCgB,EAAA,C,WADhBd,EAAAU,OAAOQ,W,qCAAPlB,EAAAU,OAAOQ,WAAUhB,GAAEc,YAAY,uBAAuBC,UAAA,GACrEpI,MAAA,e,iCAGRiH,EAAAA,EAAAA,IAGec,EAAA,CAHDC,MAAM,oBAAkB,C,kBAClC,IAA4E,EAA5Ef,EAAAA,EAAAA,IAA4EgB,EAAA,C,WAAzDd,EAAAU,OAAOS,iB,qCAAPnB,EAAAU,OAAOS,iBAAgBjB,GAAErH,MAAA,gB,gCAAgC,SAC5EiH,EAAAA,EAAAA,IAAyEgB,EAAA,C,WAAtDd,EAAAU,OAAOU,c,qCAAPpB,EAAAU,OAAOU,cAAalB,GAAErH,MAAA,gB,mCAGjD6G,EAAAA,EAAAA,GA0BM,MA1BN2B,EA0BM,EAzBFvB,EAAAA,EAAAA,IAGec,EAAA,CAHDC,MAAM,aAAW,C,kBAC3B,IACmC,EADnCf,EAAAA,EAAAA,IACmCgB,EAAA,C,WADhBd,EAAAU,OAAOY,Q,qCAAPtB,EAAAU,OAAOY,QAAOpB,GAAEc,YAAY,aAAaC,UAAA,GACxDpI,MAAA,e,iCAERiH,EAAAA,EAAAA,IASec,EAAA,CATDC,MAAM,YAAU,C,kBAC1B,IAOY,EAPZf,EAAAA,EAAAA,IAOYyB,EAAA,C,WAPQvB,EAAAU,OAAOc,O,qCAAPxB,EAAAU,OAAOc,OAAMtB,GAAEc,YAAY,oCAC3CnI,MAAA,gB,mBAGW,IAA0B,gBAArC4I,EAAAA,EAAAA,IAEYC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAFc3B,EAAA4B,YAARC,K,WAAlBC,EAAAA,EAAAA,IAEYC,EAAA,CAF2BC,IAAKH,EAAOhB,MAAOgB,EAAOrC,MAAOqC,G,uEAKhF/B,EAAAA,EAAAA,IAUec,EAAA,CAVDC,MAAM,gBAAc,C,kBAC9B,IAQY,EARZf,EAAAA,EAAAA,IAQYyB,EAAA,C,WARQvB,EAAAU,OAAOuB,W,qCAAPjC,EAAAU,OAAOuB,WAAU/B,GAAEc,YAAY,2BAC/CnI,MAAA,e,mBAGW,IAA8B,gBAAzC4I,EAAAA,EAAAA,IAEYC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAFc3B,EAAAkC,gBAARL,K,WAAlBC,EAAAA,EAAAA,IAEYC,EAAA,CAF+BC,IAAKH,EAAOhB,MAAOgB,EAAOrC,MAAOqC,G,yEAOxFnC,EAAAA,EAAAA,GAKM,MALNyC,EAKM,EAJFrC,EAAAA,EAAAA,IAGec,EAAA,CAHD/H,MAAA,0BAA4B,C,kBACtC,IAAoF,EAApFiH,EAAAA,EAAAA,IAAoFsC,EAAA,CAAzErD,KAAK,UAAWsD,QAAOC,EAAAC,SAAU1J,MAAA,iB,mBAAsB,IAAM,UAAN,a,qBAClEiH,EAAAA,EAAAA,IAAsFsC,EAAA,CAA1EC,QAAOC,EAAAE,QAAS3J,MAAA,uC,mBAAyC,IAAK,UAAL,Y,4FAUjG6G,EAAAA,EAAAA,GA4DM,MA5DN+C,EA4DM,EA1DF/C,EAAAA,EAAAA,GAwDM,MAxDNgD,EAwDM,EAvDF5C,EAAAA,EAAAA,IAsDcC,EAAA,C,WAtDQC,EAAAC,Y,qCAAAD,EAAAC,YAAWC,I,mBAC7B,IAoDmB,EApDnBJ,EAAAA,EAAAA,IAoDmBK,EAAA,CApDD9I,KAAK,KAAG,CAEXsI,OAAKS,EAAAA,EAAAA,KACZ,IAAyB,CAAzBuC,GAAyB,uCAAgCC,K,kBAQ7D,IA8BW,EA9BX9C,EAAAA,EAAAA,IA8BW+C,EAAA,CA9BAvE,KAAM0B,EAAA8C,UAAWC,OAAA,GAAOC,OAAA,GAAO,eAAa,OAAO,2BAAsBxC,IAAI,gBACpF,yBAAuB,yBAAyB3H,MAAA,qC,mBAGhD,IAAuD,EAAvDiH,EAAAA,EAAAA,IAAuDmD,EAAA,CAAtCC,KAAK,KAAKrC,MAAM,KAAKsC,MAAM,YAC5CrD,EAAAA,EAAAA,IAAiEmD,EAAA,CAAhDC,KAAK,UAAUrC,MAAM,UAAUsC,MAAM,YAEtDrD,EAAAA,EAAAA,IAAiEmD,EAAA,CAAhDC,KAAK,UAAUrC,MAAM,UAAUsC,MAAM,YAEtDrD,EAAAA,EAAAA,IAIkBmD,EAAA,CAJDC,KAAK,YAAYrC,MAAM,YAAYsC,MAAM,U,mBACpCC,GAAK,EACnB1D,EAAAA,EAAAA,GAAwC,OAAnC2D,UAAQD,EAAME,IAAIC,W,oBAG/BzD,EAAAA,EAAAA,IAOkBmD,EAAA,CAPDpC,MAAM,+BAA+BsC,MAAM,U,mBACtCC,GAAK,EACnB1D,EAAAA,EAAAA,GAGuB,KAHpB3B,KAAK,eAAgBsE,QAAKnC,GAAEoC,EAAAkB,cAAcJ,EAAME,M,EAC/CxD,EAAAA,EAAAA,IAEUO,EAAA,CAFDxH,MAAA,iDAAiD,C,kBACtD,IAAY,EAAZiH,EAAAA,EAAAA,IAAY2D,M,eACN,UAAK,Q,OAG3B3D,EAAAA,EAAAA,IAOkBmD,EAAA,CAPDpC,MAAM,4BAA4BsC,MAAM,U,mBACnCC,GAAK,EACnB1D,EAAAA,EAAAA,GAGuB,KAHpB3B,KAAK,eAAgBsE,QAAKnC,GAAEoC,EAAAoB,MAAMN,EAAME,M,EACvCxD,EAAAA,EAAAA,IAEUO,EAAA,CAFDxH,MAAA,iDAAiD,C,kBACtD,IAAY,EAAZiH,EAAAA,EAAAA,IAAY2D,M,eACN,UAAK,Q,2BAI/B/D,EAAAA,EAAAA,GAQM,MARNiE,EAQM,CAPFC,GAGA9D,EAAAA,EAAAA,IAGgB+D,EAAA,CAHAC,aAAaxB,EAAAyB,iBAAmBC,gBAAgB1B,EAAA2B,oBAC3D,eAAcjE,EAAAkE,YAAc,aAAY,CAAC,EAAG,GAAI,IAAM,YAAWlE,EAAAmE,SAClEC,OAAO,0CAA2CC,MAAOrE,EAAAqE,O,2JC3H9E,SAASC,EAAmBC,EAAIlN,GACrCmN,MAAMD,GAAKE,MAAKC,IACZ,MAAMC,EAAW7L,IAAAA,kBAA8BzB,EAAK,CAChDwE,KAAK6I,EAAItH,QAAQwH,IAAI,oBAEnB1G,EAAewG,EAAIrK,KACzB,GAAG3C,OAAOsB,gBAAgBkF,EAAe2G,OACrC,OAAO3G,EAAe2G,OAAOF,GAAYF,MAAK,SAIlD/M,OAAOoN,OAAOH,EAAWI,YACzB,MAAMC,EAAON,EAAIrK,KAAK4K,YAChBC,EAAKA,IAAIF,EAAOG,OAAOV,MAAKC,GAAKA,EAAIU,KAAM1N,OAAOoN,OAAO9J,QAAQtD,OAAOoN,OAAOnG,MAAM+F,EAAIlF,OAAOiF,KAAKS,KAC3GA,GAAM,GAEZ,CAsBA,IDwGA,GACI7N,KAAM,WACNiH,OACI,MAAO,CAEH4F,YAAa,EACbG,MAAO,EACPF,SAAU,GACVjC,eAAgB,GAChBN,WAAY,GACZ3B,YAAa,CAAC,IAAK,KACnBoF,SAAU,EACVC,MAAO,GAGPxC,UAAW,GACXpC,OAAQ,CAAC,EACT6E,OAAQ,CACJ,MAAS,EACT,OAAU,IAGtB,EAEAC,QAAS,CACLC,OACI,MAAMC,EAAkB/N,KAAKgO,SAAS,CAClCC,MAAM,EACNC,WAAY,0BAGhBC,EAAAA,EAAAA,IAAY,wBACVrB,MAAKC,IACH/M,KAAKuK,eAAiBwC,EAAIpG,IAAI,IAElCwH,EAAAA,EAAAA,IAAY,oBACVrB,MAAKC,IACH/M,KAAKiK,WAAa8C,EAAIpG,IAAI,IAE9BwH,EAAAA,EAAAA,KAAa,oBACT,CAEIpF,OAAQ/I,KAAK+I,OACb6E,OAAQ5N,KAAK4N,SAEdd,MAAKC,IACJ/M,KAAKmL,UAAY4B,EAAIpG,KACrB3G,KAAK0M,MAAQK,EAAIqB,YACjBL,EAAgB1K,OAAM,GAGlC,EACAuH,WACIuD,EAAAA,EAAAA,KAAa,oBACT,CACIpF,OAAQ/I,KAAK+I,OACb6E,OAAQ5N,KAAK4N,SACdd,MAAKC,IACJ/M,KAAKmL,UAAY4B,EAAIpG,KACrB3G,KAAK0M,MAAQK,EAAIqB,WAAW,GAExC,EACAvD,UACI7K,KAAK+I,OAAS,CAAC,CACnB,EACAqD,iBAAiBiC,GACbrO,KAAKwM,SAAW6B,EAChBrO,KAAK4N,OAAO3H,OAASoI,EACrBrO,KAAK8N,MACT,EACAxB,oBAAoB+B,GAChBrO,KAAKuM,YAAc8B,EACnBrO,KAAK4N,OAAOU,OAASD,EAAM,GAAKrO,KAAK4N,OAAO3H,OAC5CjG,KAAK8N,MACT,EAGAjC,cAAcF,GACDA,EAAI4C,GACC5C,EAAIvC,QACJuC,EAAIhC,QAFlB,IAGIvD,EAAQ,+FACRoI,EAAY,yDAChB7B,EAAmBvG,EAAMoI,EAC7B,EAEAzC,MAAMJ,GACF,IAAI4C,EAAK5C,EAAI4C,GACTnF,EAAUuC,EAAIvC,QACdO,EAAUgC,EAAIhC,QACdvD,EAAQ,4FACRoI,EAAY,MAAKD,KAAMnF,KAAWO,mBACtCgD,EAAmBvG,EAAMoI,EAC7B,GAGJC,UACIzO,KAAK8N,MAET,G,SE7OJ,MAAMY,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://GP-ATACdb/./node_modules/streamsaver/StreamSaver.js","webpack://GP-ATACdb/./src/views/download.vue","webpack://GP-ATACdb/./src/utils/download.js","webpack://GP-ATACdb/./src/views/download.vue?4608"],"sourcesContent":["/*! streamsaver. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\n/* global chrome location ReadableStream define MessageChannel TransformStream */\n\n;((name, definition) => {\n  typeof module !== 'undefined'\n    ? module.exports = definition()\n    : typeof define === 'function' && typeof define.amd === 'object'\n      ? define(definition)\n      : this[name] = definition()\n})('streamSaver', () => {\n  'use strict'\n\n  const global = typeof window === 'object' ? window : this\n  if (!global.HTMLElement) console.warn('streamsaver is meant to run on browsers main thread')\n\n  let mitmTransporter = null\n  let supportsTransferable = false\n  const test = fn => { try { fn() } catch (e) {} }\n  const ponyfill = global.WebStreamsPolyfill || {}\n  const isSecureContext = global.isSecureContext\n  // TODO: Must come up with a real detection test (#69)\n  let useBlobFallback = /constructor/i.test(global.HTMLElement) || !!global.safari || !!global.WebKitPoint\n  const downloadStrategy = isSecureContext || 'MozAppearance' in document.documentElement.style\n    ? 'iframe'\n    : 'navigate'\n\n  const streamSaver = {\n    createWriteStream,\n    WritableStream: global.WritableStream || ponyfill.WritableStream,\n    supported: true,\n    version: { full: '2.0.5', major: 2, minor: 0, dot: 5 },\n    mitm: 'https://jimmywarting.github.io/StreamSaver.js/mitm.html?version=2.0.0'\n  }\n\n  /**\n   * create a hidden iframe and append it to the DOM (body)\n   *\n   * @param  {string} src page to load\n   * @return {HTMLIFrameElement} page to load\n   */\n  function makeIframe (src) {\n    if (!src) throw new Error('meh')\n    const iframe = document.createElement('iframe')\n    iframe.hidden = true\n    iframe.src = src\n    iframe.loaded = false\n    iframe.name = 'iframe'\n    iframe.isIframe = true\n    iframe.postMessage = (...args) => iframe.contentWindow.postMessage(...args)\n    iframe.addEventListener('load', () => {\n      iframe.loaded = true\n    }, { once: true })\n    document.body.appendChild(iframe)\n    return iframe\n  }\n\n  /**\n   * create a popup that simulates the basic things\n   * of what a iframe can do\n   *\n   * @param  {string} src page to load\n   * @return {object}     iframe like object\n   */\n  function makePopup (src) {\n    const options = 'width=200,height=100'\n    const delegate = document.createDocumentFragment()\n    const popup = {\n      frame: global.open(src, 'popup', options),\n      loaded: false,\n      isIframe: false,\n      isPopup: true,\n      remove () { popup.frame.close() },\n      addEventListener (...args) { delegate.addEventListener(...args) },\n      dispatchEvent (...args) { delegate.dispatchEvent(...args) },\n      removeEventListener (...args) { delegate.removeEventListener(...args) },\n      postMessage (...args) { popup.frame.postMessage(...args) }\n    }\n\n    const onReady = evt => {\n      if (evt.source === popup.frame) {\n        popup.loaded = true\n        global.removeEventListener('message', onReady)\n        popup.dispatchEvent(new Event('load'))\n      }\n    }\n\n    global.addEventListener('message', onReady)\n\n    return popup\n  }\n\n  try {\n    // We can't look for service worker since it may still work on http\n    new Response(new ReadableStream())\n    if (isSecureContext && !('serviceWorker' in navigator)) {\n      useBlobFallback = true\n    }\n  } catch (err) {\n    useBlobFallback = true\n  }\n\n  test(() => {\n    // Transferable stream was first enabled in chrome v73 behind a flag\n    const { readable } = new TransformStream()\n    const mc = new MessageChannel()\n    mc.port1.postMessage(readable, [readable])\n    mc.port1.close()\n    mc.port2.close()\n    supportsTransferable = true\n    // Freeze TransformStream object (can only work with native)\n    Object.defineProperty(streamSaver, 'TransformStream', {\n      configurable: false,\n      writable: false,\n      value: TransformStream\n    })\n  })\n\n  function loadTransporter () {\n    if (!mitmTransporter) {\n      mitmTransporter = isSecureContext\n        ? makeIframe(streamSaver.mitm)\n        : makePopup(streamSaver.mitm)\n    }\n  }\n\n  /**\n   * @param  {string} filename filename that should be used\n   * @param  {object} options  [description]\n   * @param  {number} size     deprecated\n   * @return {WritableStream<Uint8Array>}\n   */\n  function createWriteStream (filename, options, size) {\n    let opts = {\n      size: null,\n      pathname: null,\n      writableStrategy: undefined,\n      readableStrategy: undefined\n    }\n\n    let bytesWritten = 0 // by StreamSaver.js (not the service worker)\n    let downloadUrl = null\n    let channel = null\n    let ts = null\n\n    // normalize arguments\n    if (Number.isFinite(options)) {\n      [ size, options ] = [ options, size ]\n      console.warn('[StreamSaver] Deprecated pass an object as 2nd argument when creating a write stream')\n      opts.size = size\n      opts.writableStrategy = options\n    } else if (options && options.highWaterMark) {\n      console.warn('[StreamSaver] Deprecated pass an object as 2nd argument when creating a write stream')\n      opts.size = size\n      opts.writableStrategy = options\n    } else {\n      opts = options || {}\n    }\n    if (!useBlobFallback) {\n      loadTransporter()\n\n      channel = new MessageChannel()\n\n      // Make filename RFC5987 compatible\n      filename = encodeURIComponent(filename.replace(/\\//g, ':'))\n        .replace(/['()]/g, escape)\n        .replace(/\\*/g, '%2A')\n\n      const response = {\n        transferringReadable: supportsTransferable,\n        pathname: opts.pathname || Math.random().toString().slice(-6) + '/' + filename,\n        headers: {\n          'Content-Type': 'application/octet-stream; charset=utf-8',\n          'Content-Disposition': \"attachment; filename*=UTF-8''\" + filename\n        }\n      }\n\n      if (opts.size) {\n        response.headers['Content-Length'] = opts.size\n      }\n\n      const args = [ response, '*', [ channel.port2 ] ]\n\n      if (supportsTransferable) {\n        const transformer = downloadStrategy === 'iframe' ? undefined : {\n          // This transformer & flush method is only used by insecure context.\n          transform (chunk, controller) {\n            if (!(chunk instanceof Uint8Array)) {\n              throw new TypeError('Can only write Uint8Arrays')\n            }\n            bytesWritten += chunk.length\n            controller.enqueue(chunk)\n\n            if (downloadUrl) {\n              location.href = downloadUrl\n              downloadUrl = null\n            }\n          },\n          flush () {\n            if (downloadUrl) {\n              location.href = downloadUrl\n            }\n          }\n        }\n        ts = new streamSaver.TransformStream(\n          transformer,\n          opts.writableStrategy,\n          opts.readableStrategy\n        )\n        const readableStream = ts.readable\n\n        channel.port1.postMessage({ readableStream }, [ readableStream ])\n      }\n\n      channel.port1.onmessage = evt => {\n        // Service worker sent us a link that we should open.\n        if (evt.data.download) {\n          // Special treatment for popup...\n          if (downloadStrategy === 'navigate') {\n            mitmTransporter.remove()\n            mitmTransporter = null\n            if (bytesWritten) {\n              location.href = evt.data.download\n            } else {\n              downloadUrl = evt.data.download\n            }\n          } else {\n            if (mitmTransporter.isPopup) {\n              mitmTransporter.remove()\n              mitmTransporter = null\n              // Special case for firefox, they can keep sw alive with fetch\n              if (downloadStrategy === 'iframe') {\n                makeIframe(streamSaver.mitm)\n              }\n            }\n\n            // We never remove this iframes b/c it can interrupt saving\n            makeIframe(evt.data.download)\n          }\n        } else if (evt.data.abort) {\n          chunks = []\n          channel.port1.postMessage('abort') //send back so controller is aborted\n          channel.port1.onmessage = null\n          channel.port1.close()\n          channel.port2.close()\n          channel = null\n        }\n      }\n\n      if (mitmTransporter.loaded) {\n        mitmTransporter.postMessage(...args)\n      } else {\n        mitmTransporter.addEventListener('load', () => {\n          mitmTransporter.postMessage(...args)\n        }, { once: true })\n      }\n    }\n\n    let chunks = []\n\n    return (!useBlobFallback && ts && ts.writable) || new streamSaver.WritableStream({\n      write (chunk) {\n        if (!(chunk instanceof Uint8Array)) {\n          throw new TypeError('Can only write Uint8Arrays')\n        }\n        if (useBlobFallback) {\n          // Safari... The new IE6\n          // https://github.com/jimmywarting/StreamSaver.js/issues/69\n          //\n          // even though it has everything it fails to download anything\n          // that comes from the service worker..!\n          chunks.push(chunk)\n          return\n        }\n\n        // is called when a new chunk of data is ready to be written\n        // to the underlying sink. It can return a promise to signal\n        // success or failure of the write operation. The stream\n        // implementation guarantees that this method will be called\n        // only after previous writes have succeeded, and never after\n        // close or abort is called.\n\n        // TODO: Kind of important that service worker respond back when\n        // it has been written. Otherwise we can't handle backpressure\n        // EDIT: Transferable streams solves this...\n        channel.port1.postMessage(chunk)\n        bytesWritten += chunk.length\n\n        if (downloadUrl) {\n          location.href = downloadUrl\n          downloadUrl = null\n        }\n      },\n      close () {\n        if (useBlobFallback) {\n          const blob = new Blob(chunks, { type: 'application/octet-stream; charset=utf-8' })\n          const link = document.createElement('a')\n          link.href = URL.createObjectURL(blob)\n          link.download = filename\n          link.click()\n        } else {\n          channel.port1.postMessage('end')\n        }\n      },\n      abort () {\n        chunks = []\n        channel.port1.postMessage('abort')\n        channel.port1.onmessage = null\n        channel.port1.close()\n        channel.port2.close()\n        channel = null\n      }\n    }, opts.writableStrategy)\n  }\n\n  return streamSaver\n})\n","<template>\r\n    <!-- 上面的筛选 -->\r\n\r\n\r\n    <div style=\"width: 95%;margin: 2% auto; overflow: hidden;\">\r\n        <!-- 筛选面板 -->\r\n        <div class=\"col-md-12\" data-plugin-portlet>\r\n            <el-collapse v-model=\"activeNames\">\r\n                <el-collapse-item name=\"1\">\r\n                    <!-- 展示面板title -->\r\n                    <template #title>\r\n                        <el-icon>\r\n                            <Search />\r\n                        </el-icon>&nbsp; Search\r\n                    </template>\r\n\r\n\r\n                    <el-form ref=\"form\" :model=\"filter\" label-width=\"130px\">\r\n                        <div class=\"formRow1\">\r\n\r\n                            <el-form-item label=\"Pb_gene :\">\r\n                                <el-input v-model=\"filter.pb_gene\" placeholder=\"e.g. ATP5F1C\" clearable\r\n                                    style=\"width: 70%;\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"Pb_ensembl :\">\r\n                                <el-input v-model=\"filter.pb_ensembl\" placeholder=\"e.g. ENSG00000165629\" clearable\r\n                                    style=\"width: 85%;\"></el-input>\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"n_sample range :\">\r\n                                <el-input v-model=\"filter.n_sample_greater\" style=\"width: 80px;\"></el-input>&nbsp-&nbsp\r\n                                <el-input v-model=\"filter.n_sample_less\" style=\"width: 80px;\"></el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                        <div class=\"formRow2\">\r\n                            <el-form-item label=\"Celline :\">\r\n                                <el-input v-model=\"filter.celline\" placeholder=\"e.g. HepG2\" clearable\r\n                                    style=\"width: 70%;\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"Method :\">\r\n                                <el-select v-model=\"filter.method\" placeholder=\"Please select the knockout method\"\r\n                                    style=\"width: 100%;\">\r\n                                    <!-- <el-option label= \"RNAi_interference\"  value=\"method\"></el-option>\r\n                        <el-option label=\"CRISPR_deletion\" value=\"method\"></el-option> -->\r\n                                    <el-option v-for='item in methodList' :key='item' :label=\"item\" :value=\"item\">\r\n\r\n                                    </el-option>\r\n                                </el-select>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"Datasource :\">\r\n                                <el-select v-model=\"filter.datasource\" placeholder=\"Please select datasource\"\r\n                                    style=\"width: 80%;\">\r\n                                    <!-- <el-option label=\"ENCODE\"  value=\"datasource\"></el-option>\r\n                        <el-option label=\"GEO\"  value=\"datasource\"></el-option> -->\r\n                                    <el-option v-for='item in datasourceList' :key='item' :label=\"item\" :value=\"item\">\r\n\r\n                                    </el-option>\r\n\r\n                                </el-select>\r\n                            </el-form-item>\r\n                        </div>\r\n                        <div class=\"formRow3\">\r\n                            <el-form-item style=\"margin-left: -120px;\">\r\n                                <el-button type=\"success\" @click=\"onSubmit\" style=\"width: 100px;\">Submit</el-button>\r\n                                <el-button @click=\"onReset\" style=\"margin-left: 100px;width: 100px;\">Reset</el-button>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </el-form>\r\n\r\n                </el-collapse-item>\r\n            </el-collapse>\r\n        </div>\r\n    </div>\r\n\r\n    <div style=\"width: 95%;margin: 1% auto; overflow: hidden;\">\r\n        <!-- 数据展示面板 -->\r\n        <div class=\"col-md-12\" data-plugin-portlet>\r\n            <el-collapse v-model=\"activeNames\">\r\n                <el-collapse-item name=\"2\">\r\n                    <!-- 展示面板title -->\r\n                    <template #title>\r\n                        <i class=\"ti-layers\"></i>&nbsp; Downstream Data Download <sup><span data-html=\"true\"\r\n                                data-toggle=\"tooltip\" data-placement=\"right\"\r\n                                title=\"The meaning of columns is explained in the Help page.\"><i class=\"ti-info-alt\"\r\n                                    style=\"font-size: 70%\"> </i></span></sup>\r\n                    </template>\r\n\r\n\r\n                    <!-- 表格展示 -->\r\n                    <el-table :data=\"tableData\" border stripe table-layout=\"auto\" highlight-current-row ref=\"multipleTable\"\r\n                        header-cell-class-name=\"header-cell-class-name\" style=\"color: black;margin-top: 20px;\">\r\n                        <!-- prop是表头属性名 label是展示的列名 宽度不写就是自适应-->\r\n\r\n                        <el-table-column prop=\"id\" label=\"ID\" align=\"center\" />\r\n                        <el-table-column prop=\"pb_gene\" label=\"Pb_gene\" align=\"center\" />\r\n\r\n                        <el-table-column prop=\"celline\" label=\"Celline\" align=\"center\" />\r\n\r\n                        <el-table-column prop=\"accession\" label=\"Accession\" align=\"center\">\r\n                            <template v-slot=\"scope\">\r\n                                <div v-html=\"scope.row.accession\"></div>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column label=\"Gene-Cluster activity matrix\" align=\"center\">\r\n                            <template v-slot=\"scope\">\r\n                                <a href=\"javascript:;\" @click=\"dlNarrowPeaks(scope.row)\">\r\n                                    <el-icon style=\"text-align: middle; vertical-align: -15%;\">\r\n                                        <Download />\r\n                                    </el-icon>[tar]</a>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column label=\"Gene-Cell activity matrix\" align=\"center\">\r\n                            <template v-slot=\"scope\">\r\n                                <a href=\"javascript:;\" @click=\"dlDBA(scope.row)\">\r\n                                    <el-icon style=\"text-align: middle; vertical-align: -15%;\">\r\n                                        <Download />\r\n                                    </el-icon>[tar]</a>\r\n                            </template>\r\n                        </el-table-column>\r\n                    </el-table>\r\n                    <div class=\"table-foot\" style=\"margin: 3vh auto;\">\r\n                        <div></div>\r\n\r\n                        <!-- 分页 -->\r\n                        <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                            :current-page=\"currentPage\" :page-sizes=\"[5, 10, 20]\" :page-size=\"pageSize\"\r\n                            layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n                        </el-pagination>\r\n                    </div>\r\n\r\n                </el-collapse-item>\r\n            </el-collapse>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n  \r\n\r\n<script >\r\n\r\nimport request from \"@/utils/request\";\r\nimport downloadFile from \"@/utils/download\";\r\nimport {fileDownloadHandle} from \"@/utils/download\";\r\n\r\n\r\nexport default {\r\n    name: 'download',\r\n    data() {\r\n        return {\r\n\r\n            currentPage: 1,\r\n            total: 0,\r\n            pageSize: 10,\r\n            datasourceList: [],\r\n            methodList: [],\r\n            activeNames: ['1', '2'],\r\n            globalID: 1,\r\n            timer: '',\r\n\r\n\r\n            tableData: [],\r\n            filter: {},\r\n            paging: {\r\n                \"start\": 0, //起始数据点（分页）\r\n                \"length\": 10\r\n            }\r\n        };\r\n    },\r\n\r\n    methods: {\r\n        load() {\r\n            const loadingInstance = this.$loading({\r\n                lock: true,\r\n                background: 'rgba(255,255,255,0.8)'\r\n            })\r\n            // 无需方法筛选\r\n            request.get(\"/get_datasource_enum\",\r\n            ).then(res => {\r\n                this.datasourceList = res.data;\r\n            })\r\n            request.get(\"/get_method_enum\",\r\n            ).then(res => {\r\n                this.methodList = res.data;\r\n            })\r\n            request.post(\"/get_overall_data\",\r\n                {\r\n\r\n                    filter: this.filter,\r\n                    paging: this.paging\r\n\r\n                }).then(res => {\r\n                    this.tableData = res.data;\r\n                    this.total = res.records_sum;\r\n                    loadingInstance.close()\r\n                })\r\n\r\n        },\r\n        onSubmit() {\r\n            request.post(\"/get_overall_data\",\r\n                {\r\n                    filter: this.filter,\r\n                    paging: this.paging\r\n                }).then(res => {\r\n                    this.tableData = res.data;\r\n                    this.total = res.records_sum;\r\n                })\r\n        },\r\n        onReset() {\r\n            this.filter = {}\r\n        },\r\n        handleSizeChange(val) {   //改变当前每页的个数触发\r\n            this.pageSize = val\r\n            this.paging.length = val\r\n            this.load();\r\n        },\r\n        handleCurrentChange(val) {   //改变当前页码触发\r\n            this.currentPage = val\r\n            this.paging.start = (val - 1) * this.paging.length\r\n            this.load();\r\n        },\r\n\r\n        // 下载gene_activity_by_cluster函数\r\n        dlNarrowPeaks(row) {\r\n            let id = row.id;\r\n            let pb_gene = row.pb_gene;\r\n            let celline = row.celline;\r\n            let href = `http://43.143.155.140/scATACdb/GSE195882/download_files/norm_gene_activity_by_cluster.tar.gz`;\r\n            let fileName = `GSE195882_Prmt5_spleen_gene_activity_by_cluster.tar.gz`\r\n            fileDownloadHandle(href, fileName)\r\n        },\r\n        // 下载gene_activity_by_cell函数\r\n        dlDBA(row) {\r\n            let id = row.id;\r\n            let pb_gene = row.pb_gene;\r\n            let celline = row.celline;\r\n            let href = `http://43.143.155.140/scATACdb/GSE195882/download_files/norm_gene_activity_by_cell.tar.gz`;\r\n            let fileName = `id-${id}_${pb_gene}_${celline}_DBA_obj.tar.gz`\r\n            fileDownloadHandle(href, fileName)\r\n        },\r\n       \r\n    },\r\n    created() {\r\n        this.load();\r\n        // sessionStorage.setItem('dbID', ' ')\r\n    },\r\n\r\n}\r\n\r\n</script>\r\n  \r\n<style scoped>\r\n.el-form {\r\n    margin-left: 4vw;\r\n}\r\n\r\n.el-form-item__label {\r\n    color: black;\r\n}\r\n\r\n.header-cell-class-name {\r\n    border-color: black;\r\n    color: black;\r\n}\r\n\r\n.formRow1 {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    justify-content: space-between;\r\n\r\n    margin-top: 20px;\r\n    margin-right: 20px;\r\n}\r\n\r\n.formRow2 {\r\n    display: grid;\r\n    grid-template-columns: 2fr 3fr 3fr;\r\n    justify-content: space-between;\r\n    justify-self: center;\r\n\r\n    margin-right: 20px;\r\n}\r\n\r\n.formRow3 {\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\n.el-row {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.el-row:last-child {\r\n    margin-bottom: 0;\r\n}\r\n\r\n.el-col {\r\n    border-radius: 4px;\r\n}\r\n\r\n.grid-content {\r\n    border-radius: 4px;\r\n    min-height: 36px;\r\n}\r\n\r\n.el-collapse-item__content {\r\n    background-color: #eeeeee36;\r\n}\r\n</style>","import axios from 'axios'\r\nimport streamSaver from \"streamsaver\"\r\n\r\nexport function fileDownloadHandle(url,name){\r\n  fetch(url).then(res=>{\r\n      const fileStream=streamSaver.createWriteStream(name,{\r\n          size:res.headers.get(\"content-length\")\r\n      })\r\n      const readableStream=res.body;\r\n      if(window.WritableStream&&readableStream.pipeTo){\r\n          return readableStream.pipeTo(fileStream).then(()=> {\r\n\r\n          })\r\n      }\r\n      window.writer=fileStream.getWriter();\r\n      const reader=res.body.getReader();\r\n      const pump=()=>reader.read().then(res=>res.done? window.writer.close():window.writer.write(res.value).then(pump))\r\n      pump();\r\n  })\r\n}\r\n\r\nconst downloadFile = (url, filename) =>\r\n  axios\r\n    .get(url, {\r\n      responseType: 'blob',\r\n    })\r\n    .then((res) => {\r\n      const blob = new Blob([res.data]) // 构造一个blob对象来处理数据，并设置文件类型\r\n      if (window.navigator.msSaveOrOpenBlob) {\r\n        // 兼容IE10\r\n        navigator.msSaveBlob(blob, filename)\r\n      } else {\r\n        const href = URL.createObjectURL(blob) // 创建新的URL表示指定的blob对象\r\n        const a = document.createElement('a')\r\n        a.style.display = 'none'\r\n        a.href = href // 指定下载链接\r\n        a.download = filename // 指定下载文件名\r\n        a.click()\r\n        URL.revokeObjectURL(a.href) // 释放URL对象\r\n      }\r\n    })\r\nexport default downloadFile","import { render } from \"./download.vue?vue&type=template&id=9d65bcb2&scoped=true\"\nimport script from \"./download.vue?vue&type=script&lang=js\"\nexport * from \"./download.vue?vue&type=script&lang=js\"\n\nimport \"./download.vue?vue&type=style&index=0&id=9d65bcb2&scoped=true&lang=css\"\n\nimport exportComponent from \"F:\\\\nku\\\\科研项目\\\\GP-scATACdb\\\\code\\\\GP-scATACdb\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9d65bcb2\"]])\n\nexport default __exports__"],"names":["name","definition","module","exports","global","window","this","HTMLElement","console","warn","mitmTransporter","supportsTransferable","test","fn","e","ponyfill","WebStreamsPolyfill","isSecureContext","useBlobFallback","safari","WebKitPoint","downloadStrategy","document","documentElement","style","streamSaver","createWriteStream","WritableStream","supported","version","full","major","minor","dot","mitm","makeIframe","src","Error","iframe","createElement","hidden","loaded","isIframe","postMessage","args","contentWindow","addEventListener","once","body","appendChild","makePopup","options","delegate","createDocumentFragment","popup","frame","open","isPopup","remove","close","dispatchEvent","removeEventListener","onReady","evt","source","Event","Response","ReadableStream","navigator","err","loadTransporter","filename","size","opts","pathname","writableStrategy","undefined","readableStrategy","bytesWritten","downloadUrl","channel","ts","Number","isFinite","highWaterMark","MessageChannel","encodeURIComponent","replace","escape","response","transferringReadable","Math","random","toString","slice","headers","port2","transformer","transform","chunk","controller","Uint8Array","TypeError","length","enqueue","location","href","flush","TransformStream","readableStream","readable","port1","onmessage","data","download","abort","chunks","writable","write","push","blob","Blob","type","link","URL","createObjectURL","click","mc","Object","defineProperty","configurable","value","class","_createElementVNode","title","_hoisted_1","_hoisted_2","_createVNode","_component_el_collapse","$data","activeNames","$event","_component_el_collapse_item","_withCtx","_component_el_icon","_component_Search","_component_el_form","ref","model","filter","_hoisted_3","_component_el_form_item","label","_component_el_input","pb_gene","placeholder","clearable","pb_ensembl","n_sample_greater","n_sample_less","_hoisted_4","celline","_component_el_select","method","_createElementBlock","_Fragment","_renderList","methodList","item","_createBlock","_component_el_option","key","datasource","datasourceList","_hoisted_5","_component_el_button","onClick","$options","onSubmit","onReset","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_component_el_table","tableData","border","stripe","_component_el_table_column","prop","align","scope","innerHTML","row","accession","dlNarrowPeaks","_component_Download","dlDBA","_hoisted_13","_hoisted_14","_component_el_pagination","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange","currentPage","pageSize","layout","total","fileDownloadHandle","url","fetch","then","res","fileStream","get","pipeTo","writer","getWriter","reader","getReader","pump","read","done","globalID","timer","paging","methods","load","loadingInstance","$loading","lock","background","request","records_sum","val","start","id","fileName","created","__exports__","render"],"sourceRoot":""}